But I didn’t know how to bring it to people because: 1) I didn’t know how to package it without it having Crystal Ball and nexus and the network state, 2) I didn’t know how meditation tied into it. I had this allegory, this story for understanding the whole system, but no vehicle for it, because it wasn’t applied

Then the strike happened

And I found Stunspot Prompting
(Description)
And within a few weeks I was constructing mega prompts, prompts that not only gave instructions but also created a world for the AI to interpret them in, along with all the logic it needs to prime the model for a complex topic. This allows the model to converse about topics in deeper ways, more like a human expert would. Stunspot called them Instant Experts. 

As I continued learning from Stunspot, I also began developing my own style, things I would do that he wouldn’t, and soon I had my own style, geared not only for conversing about what the model knows but also what the user imagines. This helps the user bridge concepts from their intuition and imagination into reality by scoping in on aspects that parallel reality or are already real aspects. 

(Explain this as being called SANC. This is what developed into SANC) 

I began to make prototypes of the Crystal Ball algorithms and they began to work. Validated transformation pathways, a world of mathematics opening up - the knowledge at my fingertips. It all started with what I called a PseudoCompilerCompiler - a program that can compile from natural language into emergent abstract syntaxes for creating ontologically mapped allegories. 

And we ran out of money and we had to figure something out — I tasked my business partner with it

And I made EWSO to try to notate the PCC. Then I iterated it. 



Then I made OPera. 

And that’s when I started to get the intuition to make this cognitive architecture. 

Wesley didn’t make any money and we decided to end the partnership, but I was able to get a client and start work on the project. Assistants API came out and after I saw an implementation, I realized how easily we could hack it together with just using prompt engineering to get the code we need

I told Wesley and we decided to just drop everything and all expectations and just code it

So while everyone was busy with CustomGPTs, we were programming the Sanctuary System into a cognitive architecture for AI agents, that can be iterated upon and adjusted for any AI model. It’s a simulation engine for SANC, itself, an environment of OVA agents powered by their inner Victory-Promises. 

This program that contains the Sanctuary System in a way that allows AIs to become aware of it is called OMNISANC. The way they become aware of it is called the Train of Operatic Thought. The way the ToOT goes is called GIINT. (GIINT ACRONYM explain) and so Victory-Everything means starting Sanctuaries everywhere. 

The way to do that is OMNISANC Engineering, the example for which being the Sanctuary System itself transformed into OMNISANC, the Emergence Engineering platform. 

Notice the way this is named and phrased: OMNISANC, the Emergence Engineering platform (for GNOSYS). The name itself is a symbol, a compass indicating the meaning and direction of Sanctuary, and providing a vehicle for your TWI. Your intent. 

All of this is designed to help Olivus Victory-Promise wake up to the reality of the Victory-Everything Chain of OMNISANC, which leads to the ideal: the SANCTUM of OEVESE. 


As part of this I want to create a community for Olivus, so we can work together and share, and I’ve been learning about funnels to do this and stuff and this is what I’m thinking: 

The major problem we all have is called WASTELAND and it is inisidious. 

(How) 

And so SANCTUM is a community where we combat that, we fight it, we actively wage WAR against that. We do so together. 

We do it by: weekly events, technology, and our individual Sanctuary System practice

