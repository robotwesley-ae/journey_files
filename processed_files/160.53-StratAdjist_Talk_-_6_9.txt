Prefix: : <http://www.example.org/ewso#> Ontology: <http://www.example.org/ewso> Declaration(Class(:Story)) Declaration(Class(:Scene)) Declaration(Class(:HeroGoalsExternal)) SubClassOf(:Scene :Story) SubClassOf(:HeroGoalsExternal :Scene) ObjectProperty: :hasInstanceLevelProperty Domain: :Story Range: :HeroGoalsExternal ObjectProperty: :emergesInto Chain: :hasInstanceLevelProperty o :emergesInto Characteristics: Transitive SubObjectPropertyOf(:emergesInto :hasInstanceLevelProperty)
Here, hasInstanceLevelProperty represents the SemOntoRel relationship you defined. The class Story has an instance-level property that is a HeroGoalsExternal (i.e., an instance-level property value). This instance-level property then emergesInto the next level (i.e., the emergent structure), represented here by the object property chain. This is a vastly simplified example and doesn't incorporate the full complexity of your conceptual model, but hopefully it helps to illustrate the idea.
Please note that this example is quite abstract, as OWL-DL is typically used to define more concrete relationships, classes, and properties. This example is meant to demonstrate the general idea in the context of the abstract and dynamic model you've proposed. Depending on the specifics of your application, you may need to work with an ontology engineer or similar expert to develop a fully-fledged and functioning OWL ontology based on your concepts.


yes that's the entire point. u dont need to clarify it. we know thats what we are doing. we are intentionally exploiting that fact to create dynamic EWSO user ontologies
ChatGPT
Great, I'm glad that the purpose is clear. Let's delve a bit deeper into the structure using OWL-DL syntax. The description I provided before was indeed a simplification, but your structure is more complex.
You would like to express the Emergent Web Structure Ontology (EWSO) with a more detailed dynamic ontology structure involving multiple levels, represented as classes and their relationships. This is possible to a certain extent using OWL-DL syntax.
Here's a revised example based on your outline of the Emergent Structure for a screenplay:
owl
Copy code
Prefix: : <http://www.example.org/ewso#> Ontology: <http://www.example.org/ewso> Declaration(Class(:Screenplay)) Declaration(Class(:Story)) Declaration(Class(:Scene)) Declaration(Class(:HeroGoalsExternal)) Declaration(Class(:HeroGoalsInternal)) Declaration(Class(:Symbol)) Declaration(Class(:Sign)) Declaration(Class(:HerosJourneyPlotStructure)) Declaration(Class(:PsychologicalArchetype)) Declaration(Class(:DreamCognition)) Declaration(Class(:ActionPlanning)) Declaration(Class(:InfluencedActionInSociety)) SubClassOf(:Scene :Story) SubClassOf(:HeroGoalsExternal :Scene) SubClassOf(:HeroGoalsInternal :HeroGoalsExternal) SubClassOf(:Symbol :HeroGoalsInternal) SubClassOf(:Sign :Symbol) SubClassOf(:HerosJourneyPlotStructure :Sign) SubClassOf(:PsychologicalArchetype :HerosJourneyPlotStructure) SubClassOf(:DreamCognition :PsychologicalArchetype) SubClassOf(:ActionPlanning :DreamCognition) SubClassOf(:InfluencedActionInSociety :ActionPlanning) ObjectProperty: :hasInstanceLevelProperty Domain: :Screenplay Range: :InfluencedActionInSociety ObjectProperty: :emergesInto Chain: :hasInstanceLevelProperty o :emergesInto Characteristics: Transitive SubObjectPropertyOf(:emergesInto :hasInstanceLevelProperty)
In this representation, each class is a subclass of the class that emerges from it, reflecting the structure you outlined. hasInstanceLevelProperty represents the SemOntoRel relationship from a Screenplay to an InfluencedActionInSociety. The emergesInto property is a transitive property that represents the chain of emergence through the ontology.
Please note that while this ontology mirrors the hierarchy you described, it's a static representation. The dynamic part would come into play when an individual user adapts this structure to suit their specific needs, which is a process that falls outside the scope of