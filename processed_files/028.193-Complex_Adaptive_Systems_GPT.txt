Make sure you have all the requirements above, if not, install/get them.
The following commands should be executed in a CMD, Bash or Powershell window. To do this, go to a folder on your computer, click in the folder path at the top and type CMD, then press enter.

Clone the repository: For this step you need Git installed, but you can just download the zip file instead by clicking the button at the top of this page ‚òùÔ∏è
git clone https://github.com/Torantulino/Auto-GPT.git
Navigate to the project directory: (Type this into your CMD window, you're aiming to navigate the CMD window to the repository you just downloaded)
cd 'Auto-GPT'
Install the required dependencies: (Again, type this into your CMD window)
pip install -r requirements.txt
Rename .env.template to .env and fill in your OPENAI_API_KEY. If you plan to use Speech Mode, fill in your ELEVEN_LABS_API_KEY as well.
Obtain your OpenAI API key from: https://platform.openai.com/account/api-keys.
Obtain your ElevenLabs API key from: https://elevenlabs.io. You can view your xi-api-key using the "Profile" tab on the website.
If you want to use GPT on an Azure instance, set USE_AZURE to True and provide the OPENAI_AZURE_API_BASE, OPENAI_AZURE_API_VERSION and OPENAI_AZURE_DEPLOYMENT_ID values as explained here: https://pypi.org/project/openai/ in the Microsoft Azure Endpoints section
üîß Usage
Run the main.py Python script in your terminal: (Type this into your CMD window)
python scripts/main.py
After each of AUTO-GPT's actions, type "NEXT COMMAND" to authorise them to continue.
To exit the program, type "exit" and press Enter.
üó£Ô∏è Speech Mode
Use this to use TTS for Auto-GPT

python scripts/main.py --speak

üîç Google API Keys Configuration
This section is optional, use the official google api if you are having issues with error 429 when running a google search. To use the google_official_search command, you need to set up your Google API keys in your environment variables.

Go to the Google Cloud Console.
If you don't already have an account, create one and log in.
Create a new project by clicking on the "Select a Project" dropdown at the top of the page and clicking "New Project". Give it a name and click "Create".
Go to the APIs & Services Dashboard and click "Enable APIs and Services". Search for "Custom Search API" and click on it, then click "Enable".
Go to the Credentials page and click "Create Credentials". Choose "API Key".
Copy the API key and set it as an environment variable named GOOGLE_API_KEY on your machine. See setting up environment variables below.
Go to the Custom Search Engine page and click "Add".
Set up your search engine by following the prompts. You can choose to search the entire web or specific sites.
Once you've created your search engine, click on "Control Panel" and then "Basics". Copy the "Search engine ID" and set it as an environment variable named CUSTOM_SEARCH_ENGINE_ID on your machine. See setting up environment variables below.
Remember that your free daily custom search quota allows only up to 100 searches. To increase this limit, you need to assign a billing account to the project to profit from up to 10K daily searches.

Setting up environment variables
For Windows Users:

setx GOOGLE_API_KEY "YOUR_GOOGLE_API_KEY"
setx CUSTOM_SEARCH_ENGINE_ID "YOUR_CUSTOM_SEARCH_ENGINE_ID"

For macOS and Linux users:

export GOOGLE_API_KEY="YOUR_GOOGLE_API_KEY"
export CUSTOM_SEARCH_ENGINE_ID="YOUR_CUSTOM_SEARCH_ENGINE_ID"

Redis Setup
Install docker desktop.

Run:

docker run -d --name redis-stack-server -p 6379:6379 redis/redis-stack-server:latest
See https://hub.docker.com/r/redis/redis-stack-server for setting a password and additional configuration.

Set the following environment variables:

MEMORY_BACKEND=redis
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
Note that this is not intended to be run facing the internet and is not secure, do not expose redis to the internet without a password or at all really.

You can optionally set

WIPE_REDIS_ON_START=False
To persist memory stored in Redis.

You can specify the memory index for redis using the following:

MEMORY_INDEX=whatever
üå≤ Pinecone API Key Setup
