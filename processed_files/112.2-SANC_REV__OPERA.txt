â€œCREATE (n2 {has_RoleType: "Rejector2", has_job: "checkChecks", has_ComplexPrompt: "QueryAtomizer", has_AgentType: "Assistant", has_AgentTopology: "n-GAN", QueryAtomizerGoal: "ContextualizeUserGoalReqs", has_MemeComplex: "MarcoPierreWhiteTrainingGordonRamsay"})-[:SendsVitalTokens {VitalTokensType: "ContextualizedUserGoalReqs"}]->(n3 {has_RoleType: "Rejector1", has_job: "checkPlan", has_job2: "checkChains", has_job3: "checkDeliverable", Agent: "Assistant", has_ComplexPrompt: "WorkCheckingGuidebook", has_AgentTopology: "n-GAN", has_MemeComplex: "MemeComplex_GordonRamsayInHellsKitchenOfX", has_MemeComplexProperty: "History_TraumaFromTrainingUnderMarcoPierreWhite"})-[:passes_plan]->(n4 {has_ComplexPrompt: "ModeStagingMap", has_RoleType: "Worker", has_AgentType: "ToolAgent", has_job: "Chaining", has_job2: "Delivering", has_AgentTopology: "n-GAN", has_MemeComplex: "HellsKitchenOfXChallengeTeamMember", WorkType1: "Chaining", WorkType2: "Delivering"})-[:delivers_deliverable]->(n3)-[:DeliversVitalTokens {VitalTokensType: "AccomplishedUserGoal"}]->(n2)<-[:Input]-(n6 {has_AgentType: "LearningTooledUserProxyAgent", has_AgentTopology: "n-GAN", has_Goal: "UserGoal"})<-[:Output]-(n2), (n3)-[:passes_userGoalReq]->(n5 {has_RoleType: "Planner", has_ComplexPrompt: "PlanningFlowchart", has_AgentType: "ToolAgent", has_job: "PlanningAgentTopologyWorkflows(FutureOutputsOfAllAgentsPerGoal)", has_job2: "CallWorkerTemplate", has_job3: "CallAgentTemplateAgentTopologyTemplateWorkflow", has_AgentTopology: "n-GAN", has_MemeComplex: "HellsKitchenOfXChallengeTeamLeader"})-[:delivers_plans]->(n3), (n4)-[:sidechain]->(n7 {has_ComplexPromptChainChainingWorkflowChain: "ChainingPhases"})-[:deliverChains]->(n4)-[:sidechain]->(n11 {has_ComplexChainflow: "ComplexWorkflowChain", has_ComplexWorkflowChainPhases: "ComplexWorkflowChainPhases"})-[:constructDeliverables]->(n4), (WorkerTemplate {has_AgentType: "AgentType", has_ComplexPrompt: "ComplexPrompt", has_job(n): "Job(n)", has_RoleType: "RoleType"})<-[:calls]-({TemplateType: "NewWorker"})<-[:requests {OnlyIf: "NoChainsData or NoWorkflowsData"}]-(n5)-[:retrieves {is_a: "sidechain", AgentLib: "Worker", WorkerChainsLib: "Chains", WorkerWorkflowsLib: "WorkerWorkflows"}]->({AgentTopologiesData: "AgentTopologiesLib", AgentsData: "AgentsLib"}), (WorkerTemplate)-[:sidechain {onlyIf: "GoalRequiresNewComplexPrompts"}]->(AgentTemplateAgentTopologyTemplateWorkflow {has_ComplexPrompts: "NewComplexPrompts", has_AgentTemplateAgentTopologyTemplateTypes: "n-GAN_Type (n-GAN or n-GAN'; new workflow or new drilldown)"})<-[:retrieves]-(n6)<-[:part_of]-({is_a: "SystemPromptType"}), ({Domain: "AgentTopology", Class: "Type", InstancesRealizable: "AgentTopologyWorkflow", has_AgentTopologyID: "AgentTopologyID"})-[:is_a]->(AgentTemplateAgentTopologyTemplateWorkflow)<-[:is_a]-(n-GAN-' {Domain: "AgentTopology", Class: "Type", InstancesRealizable: "AgentTopologyWorkflow", has_AgentTopologyID: "AgentTopologyID"}), (Process Ontology of Entity {is_a: "OutputWorkflow", FunctionType: "CbSubFunction"})-[:Step3OnlyOutput]->(Chain Nesting Loop {Constructs1: "ChainNest", Constructs2: "CBRN"})<-[:Step1OnlyOutput]-(Domain Ontology of Entity {is_a: "OutputWorkflow", FunctionType: "CbSubFunction"})-[:part_of {FunctionType: "CbSubFunction"}]->(InstanceInstancingChainFlowOntology {is_a: "DynamicSidechain", IICFlowOnt: "InstantiatesTheClassInTheDomainInTheExactSenseOfSourceEntityTransformingFromNotMeaningWhatItIsToMeaningWhatItIsInTheAttentionOfTheReader", FunctionType: "CbSubFunction"})<-[:part_of {FunctionType: "CbSubFunction"}]-(Secondary Domain Ontology of Entity {is_a: "OutputWorkflow", FunctionType: "CbSubFunction"})<-[:Step2ActiveOnly {FunctionType: "CbSubFunction"}]-(InstanceInstancingChainFlowOntology)-[:Step1ActiveOnly/FullChainActive {FunctionType: "CbSubFunction"}]->(Domain Ontology of Entity)<-[:requires {FunctionType: "CbSubFunction"}]-(Secondary Domain Ontology of Entity)<-[:requires {FunctionType: "CbSubFunction"}]-(Process Ontology of Entity)<-[:requires {FunctionType: "CbSubFunction"}]-(Integrated Transformation Space Ontology of Ontologies of Entity {is_a: "OutputWorkflow", FunctionType: "CbSubFunction"})<-[:Step4ActiveOnly {FunctionType: