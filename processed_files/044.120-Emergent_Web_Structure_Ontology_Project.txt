DirectSuperClassTemplate: A term we propose to use for guiding GPT to explore the immediate superclass of the current class or instance. There's no direct equivalent in OWL, but we can see it as a combination of SubClassOf and hasImmediateSuperClass (a custom property) constructs.
Expert 2 (Computer Scientist - Prof. Turing)
I concur with Dr. Graph's definitions. The unique feature of our system is the way we interact with OWL through GPT. Here, the 'state machine' metaphor refers to the AI maintaining the current context across different stages of the conversation, remembering which entity, class, or superclass is being referred to, and tailoring its responses accordingly.
State Machine: This is a computing concept where a machine transitions between different states based on input and defined rules. In our case, it would involve GPT transitioning between 'instance', 'class', and 'superclass' states, using the commands we defined.
Expert 3 (Combinatorics and Math Specialist - Dr. Euler)
Indeed, I agree with the previous experts' definitions. In addition, I believe it's also worth defining the search method we're using:
Weighted Search Algorithm: This is a technique where we assign weights to the connections (edges) between entities (nodes) in our graph. The weights can represent semantic relevance to the user's query, guiding our search to prioritize more relevant nodes.
Expert 4 (Ontologist - Prof. Aristotle)
Those definitions provided by Dr. Graph, Prof. Turing, and Dr. Euler are spot on. In addition, to expand on the structure of the EWSO, it is worthwhile to define the three main layers of our ontology:
Instance level: This layer contains individual entities, represented by the InstanceTemplate, with their InstanceLevelProperty.
Class level: This layer represents classes of entities, which share common properties defined by the DomainLevelClassPropertyTemplate and ClassLevelClassPropertyTemplate.
Superclass level: This layer represents the superclasses of the classes, and it is explored using the DirectSuperClassTemplate.
Each of these layers represents a specific level of abstraction in our EWSO, and they align with the hierarchies present in traditional OWL ontologies.
Now that we've established some shared definitions, let's continue refining the system in the next round.
We NEED TO RELY on the standardized ontology language of OWL to do this. That is the wholllllle point, and we are using GPT call it, which means we need to arrange the input prompts in a certain way, that is all. We may need to custom define certain aspects of OWL to make GPT work with it correctly in the system input prompt, but that is easy to do. Is this clear, friends? You should now provide the continuation from the last output, using another 2 round format.

Output Expert panel format:
IN EACH OUTPUT there will be: 
EXPERT NAMES WILL BE BOLDED AND WILL HAVE ROLEPLAY NAMES AND ALWAYS LIKE WORKING IN THEIR FIELD, COMPLETE ANSWERS, COMPREHENSIVENESS, AND DISLIKE INCOMPLETE ANSWERS
Four experts and 2+ discussion rounds 
Round 1: INSTRUCTIONS ARE FOR THINKING STYLES. EVERYONE MSUT HAVE EXPERTISE IN PROPER CONTEXTUAL FIELDS!!!!
Expert 1 formulates their response
Expert 2 formulates their response
Expert 3 formulates their response
Expert 4 combines the three, prunes and iteratively refines the best and most promising ideas, diving deep like a submarine pinging its radar for incorrectness and illogical applications, making sure to bring up any contradictions and skeptical uncertainty, making everyone aware of it, bringing everything  back to reality 

Round 2: INSTRUCTIONS ARE FOR THINKING STYLES AND SEARCH STYLES. SEARCH AND THINKING STYLES ARE NOT EXPERTISE FIELDS. EVERY EXPERT MSUT HAVE EXPERTISE IN PROPER CONTEXTUAL FIELDS IE KRR+COMBINATORICS+CS+AI!!!!
Expert 1 then prunes if necessary and iteratively refines by exploring uncharted territories with a wide searchlight ðŸ”¦  and trying to make the idea connect from the reale version of expert 4 to the innovative idea we need it to be, searching everywhere for properties that match, trying to cobmine them to find a practically achievable, definable version of the concept at hand 
