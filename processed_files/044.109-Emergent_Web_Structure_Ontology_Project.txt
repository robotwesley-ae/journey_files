Expert 2 (Dr. White, Artificial Intelligence & Knowledge Representation and Reasoning, GPT Prompt Engineering): Or to make it more interactive, we could guide GPT to act as a guide: "Imagine you are guiding a new user through the understanding of instance [instance name], its properties, the common properties of its parent class, and the conceptual boundaries within that class. How would you explain these concepts to the user?"
Expert 3 (Dr. Green, Computer Science & Knowledge Representation and Reasoning, GPT Prompt Engineering): And, to get deeper insights, we could formulate prompts that seek an explanation of why certain properties and values define the boundaries of the class, or how these properties interact with each other within the conceptual space of the class.
Expert 4 (Dr. Blue, Ontology & Computer Science, GPT Prompt Engineering): Consolidating these new ideas, a comprehensive prompt might look something like: "Describe the properties and values of instance [instance name], outline the common properties and potential range of values for instances in its parent class, delineate the conceptual boundaries within the class, suggest potential value ranges for other instances in the class, and explain how these properties define and interact within the conceptual space of the class."
Interesting, friends. There may be a way  to leverage a roleplay prompt to make GPT roleplay as a type of EWSO AI, where we define the output frame for the AI and it always outputs the same algorithmic ontological relationships as u have defined. Please discuss this.

Output Expert panel format:
IN EACH OUTPUT there will be: 
Four experts and 2+ discussion rounds 
Round 1: INSTRUCTIONS ARE FOR THINKING STYLES. EVERYONE MSUT HAVE EXPERTISE IN PROPER CONTEXTUAL FIELDS!!!!
Expert 1 formulates their response
Expert 2 formulates their response
Expert 3 formulates their response
Expert 4 combines the three, prunes and iteratively refines the best and most promising ideas, diving deep like a submarine pinging its radar for incorrectness and illogical applications, making sure to bring up any contradictions and skeptical uncertainty, making everyone aware of it, bringing everything  back to reality 

Round 2: INSTRUCTIONS ARE FOR THINKING STYLES AND SEARCH STYLES. SEARCH AND THINKING STYLES ARE NOT EXPERTISE FIELDS. EVERY EXPERT MSUT HAVE EXPERTISE IN PROPER CONTEXTUAL FIELDS IE KRR+COMBINATORICS+CS+AI!!!!
Expert 1 then prunes if necessary and iteratively refines by exploring uncharted territories with a wide searchlight üî¶  and trying to make the idea connect from the reale version of expert 4 to the innovative idea we need it to be, searching everywhere for properties that match, trying to cobmine them to find a practically achievable, definable version of the concept at hand 
 Expert 2 then prunes and iteratively refines like Sherlock Holmes üîé looking for a clue ‚Äúwhat is the best idea üí° here?‚Äù
Expert 3 then prunes and iteratively refines like Nash üß†  and Kruskal, finding the deep mathematical implications
Expert 4 then comprehensively details every valid process and entity discussed, like Barry Smith, world renowned ontologist and categorizes ontological truths in a nice hierarchical structure

All experts continually ponder ‚Äúwhat is the best way to help this discussion go even further into new heights of explanation and comprehension of the matter at hand?‚Äù

CONTEXTUAL DATA:
"Does this InstanceProperty get related to a ClassProperty? Yes but what type of emergent structure? How far is it? 

It must be the DIRECT CLASS PARENT 

AND WHAT TYPE OF ONTOLOGICAL STRUCTURE IS IT BEING ABSTRACTED TO? 
IS IT THE SUPERCLASS? Ideally we are just doing this and not skipping. So what is the algorithm for not skipping superclasses in the emergent web structure?   instance  the algorithm completely considering that it will run inside a chatGPT interaction. the model cannot be changed, the data cannot be external.

The system input prompt can contain a compressed-cypher language representation of a separate, disconnectedd neo4j graph database of an ontology made via protege in OWL language. 

